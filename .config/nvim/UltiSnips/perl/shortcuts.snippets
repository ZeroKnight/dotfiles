# Various shortcuts and typing time-savers

priority 1

snippet hash "Hash definition"
my %${1:hash} = (
	$2
);
endsnippet

snippet hashr "Hashref definition"
my $${1:hashref} = {
	$2
};
endsnippet

snippet pair "Key/Value pair; foo => bar"
${1:key} => ${2:value},$0
endsnippet

snippet pairh "Key/Value pair with hashref value"
${1:key} => {
	$2
},
endsnippet

snippet paira "Key/Value pair with arrayref value"
${1:key} => [
	$2
],
endsnippet

### Idioms and Shortcuts #######################################

snippet open "open my $fh ..."
open my $${3:fh}, '<', ${1:$fn} or die "\$0: can't open ${1/^(\$).*/(?1:')$0(?1:')/} for reading: $!";
endsnippet

snippet slurp "slurp"
my $${1:var} = do { local $/; open my $fh, '<', ${2:$file}; <$fh> };
endsnippet

snippet readf "Read file into array"
open my $${3:fh}, '<', ${1:$fn} or die "\$0: can't open ${1/^(\$).*/(?1:')$0(?1:')/} for reading: $!";
chomp(my @${2:lines} = <$$3>);
close $$3;$0
endsnippet

snippet inlist "unless grep { $_ eq $foo } @bar"
${1:unless} (grep { $_ eq $${2:foo} } ${3/(\S+)(\s)?/(?2:qw\(:@)/}${3:bar}${3/(\S+)(\s)?/(?2:\))/})
{
	$0
}
endsnippet

snippet inlistx "... unless grep { $_ eq $foo } @bar"
${1:unless} grep { $_ eq $${2:foo} } ${3/(\S+)(\s)?.*/(?2:qw\(:@)/}${3:bar}${3/(\S+)(\s)?.*/(?2:\);)/}
endsnippet

# vim:ft=snippets:
