priority -50

snippet #! "shebang" b
`!p snip.rv = '#!/usr/bin/env perl'`

$0
endsnippet

snippet usesw "use strict; use warnings;" b
use strict;
use warnings;

$0
endsnippet

snippet if "if ..."
if ($1) {
    ${0:${VISUAL}}
}
endsnippet

snippet el "else ..."
else {
    ${0:${VISUAL}}
}
endsnippet

snippet eli "elsif ..."
elsif ($1) {
    ${0:${VISUAL}}
}
endsnippet

snippet ife "if .. else"
if ($1) {
    $2
} else {
    $3
}
endsnippet

snippet ifee "if..elsif..else"
if ($1) {
    $2
} elsif ($3) {
    $4
} else {
    $5
}
endsnippet

snippet xif "if (one-line)"
${1:expression} if ${2:condition};
endsnippet

snippet unless "unless"
unless ($1) {
    ${0:${VISUAL}}
}
endsnippet

snippet while "while"
while ($1) {
    ${0:${VISUAL}}
}
endsnippet

snippet for "for"
for (my $${1:var} = 0; $$1 < ${2:expression}; $$1++) {
    ${0:${VISUAL}}
}
endsnippet

snippet fore "foreach"
foreach ${1:my $${2:x}} (@${3:array}) {
    ${0:${VISUAL}}
}
endsnippet

snippet xunless "unless (one-line)"
${1:expression} unless ${2:condition};
endsnippet

snippet sub "Subroutine (function)"
sub ${1:sub_name} {
    $2
}
endsnippet

snippet xfore "foreach (one-line)"
${1:expression} foreach @${2:array};
endsnippet

snippet xwhile "while (one-line)"
${1:expression} while ${2:condition};
endsnippet

snippet slurp "slurp"
my $${1:var} = do { local $/ = undef; open my $fh, '<', ${2:$file}; <$fh> };
endsnippet

# vim:ft=snippets:
