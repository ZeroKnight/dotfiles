-- Startup Screen Configuration and Utilities

local ui = require 'zeroknight.config.ui'
local util = require 'zeroknight.util'
local icons = ui.icons

local logo = {
  '‚†ô‚£è‚†©‚†â‚†ç‚†π‚£á‚†Ä‚¢∏‚°ã‚†©‚†â‚†ç‚¢π‚°á‚£†‚†û‚†â‚†ç‚†©‚†â‚†ç‚†©‚†â‚†ç‚°â‚†ª‚£§‚†Ä‚£†‚†û‚°â‚†ç‚†©‚†â‚†ç‚†©‚†â‚†ç‚°â‚†ª‚¢¶‚¢®‚°è‚¢â‚†ç‚†©‚†â‚£Ø‚†Ä‚†Ä‚°Ø‚†â‚†ç‚†©‚¢ô‚£ó‚°è‚†©‚†â‚†ç‚°â‚£ü‚¢ª‚°ç‚†©‚†â‚†ç‚†π‚£Ü‚†Ä‚†Ä‚†Ä‚£º‚†â‚†ç‚†©‚¢â‚¢π‚°è',
  '‚†Ä‚°ó‚††‚¢Å‚†ä‚†Ñ‚¢ª‚°Ñ‚¢∏‚°É‚†®‚†à‚†å‚¢∏‚£ü‚°á‚††‚†°‚†Å‚†Ö‚°Å‚†Ö‚†°‚†Å‚†Ö‚†Ñ‚†°‚¢∏‚£ü‚°á‚¢ê‚††‚†®‚†à‚†å‚°à‚†å‚†®‚†ê‚††‚†°‚¢∏‚£ó‚°á‚¢ê‚†à‚†Ñ‚†Ö‚°∑‚†Ä‚†Ä‚°Ø‚†à‚†å‚†®‚¢ê‚£ó‚°á‚†°‚¢Å‚†°‚†Ä‚£ø‚¢∏‚°á‚†à‚†å‚†®‚††‚†π‚°Ü‚†Ä‚£∏‚¢É‚†®‚¢à‚†®‚¢Ä‚¢∏ ',
  '‚†Ä‚°Ø‚†ê‚°ê‚¢à‚†ê‚°à‚¢∑‚¢∏‚°Ö‚†å‚†®‚†ê‚¢∏‚£Ø‚°á‚†®‚††‚†ë‚¢∞‚†∂‚†¶‚¢ß‚°ä‚†Ñ‚†°‚†°‚¢∏‚£ó‚°á‚¢ê‚††‚†°‚¢®‚°∂‚†≤‚¢¶‚°Ö‚†°‚†Å‚†å‚¢∞‚£ó‚°á‚†Ç‚†å‚†Ñ‚°Å‚£ü‚†Ä‚†Ä‚°Ø‚††‚†Å‚†Ö‚¢∞‚°ó‚°á‚°Å‚°Ç‚†å‚†Ñ‚£ø‚¢∏‚°á‚†®‚†à‚†Ñ‚†Ö‚¢Ç‚¢ª‚£∞‚†è‚°Ä‚¢Ç‚¢Ç‚¢ê‚†ê‚¢∏ ',
  '‚†Ä‚°ß‚¢Å‚¢ê‚††‚¢Å‚†ê‚°ò‚£ø‚†Ü‚†®‚†à‚†å‚¢∏‚£ó‚°á‚††‚†°‚†®‚¢∏‚°á‚†Ä‚¢∏‚£Ü‚£®‚£†‚£°‚£∏‚£ó‚°á‚¢ê‚††‚¢Å‚¢∏‚°á‚†Ä‚¢∏‚†á‚°à‚†å‚£à‚£®‚£ó‚£á‚°®‚††‚†°‚†Ä‚£Ø‚†Ä‚†Ä‚°Ø‚††‚†Å‚†Ö‚†¢‚°Ø‚°á‚°ê‚††‚†®‚†Ä‚£ø‚¢∏‚°á‚†à‚†å‚°†‚¢Å‚†Ç‚†Ñ‚†ü‚°Ä‚°Ç‚¢Ç‚¢ê‚††‚¢à‚¢∏ ',
  '‚†Ä‚°è‚†Ñ‚¢Ç‚†ê‚†Ñ‚†°‚††‚¢π‚°É‚°Å‚†Ö‚†å‚¢∏‚£Ø‚°á‚†®‚††‚¢Å‚†∏‚†∂‚†¥‚¢¥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†ê‚°ê‚¢ê‚¢∏‚°á‚†Ä‚¢∏‚†ß‚†í‚†â‚†à‚†∞‚£ó‚°á‚†à‚†â‚†í‚†•‚£ó‚†Ä‚†Ä‚°Ø‚††‚†Å‚†Ö‚°ò‚°Ø‚°á‚†Ñ‚†Ö‚†å‚†Ñ‚£ø‚¢∏‚°á‚†®‚†ê‚°Ä‚°Ç‚†å‚†Ñ‚†°‚†ê‚°Ä‚†¢‚†ê‚°ê‚†ê‚¢∏ ',
  '‚†Ä‚°Ø‚†ê‚°ê‚†à‚†å‚†®‚†ê‚††‚¢Å‚¢ê‚¢à‚¢ê‚¢∏‚°∑‚°á‚†®‚†ê‚°ê‚†à‚†Ñ‚°Ç‚¢Ω‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£á‚°∞‚†î‚†í‚¢∫‚°á‚†Ä‚¢∏‚°É‚†Ä‚†Ä‚†Ä‚¢ò‚£ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚†Ä‚†Ä‚°ü‚†í‚†•‚†•‚£®‚°Ø‚°á‚†å‚†Ñ‚†Ö‚†Ç‚£ø‚¢∏‚°á‚†®‚†ê‚°Ä‚°Ç‚†å‚†Ñ‚†Ö‚°Å‚¢Ç‚¢Å‚†Ç‚°Ç‚†°‚¢∏ ',
  '‚†Ä‚°ß‚†Å‚†Ñ‚†Ö‚†°‚†®‚†à‚†å‚°Ä‚°Ç‚°ê‚††‚¢∏‚£ü‚°á‚††‚†°‚††‚¢Å‚£Å‚¢Ñ‚£ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚¢∏‚°Ö‚†Ä‚†Ä‚†Ä‚¢®‚£ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚°∑‚†Ä‚†Ä‚°ß‚†Ä‚†Ä‚†Ä‚†ê‚°Ø‚°è‚†í‚†¶‚¢Ö‚¢Ö‚£ø‚¢∏‚°á‚††‚¢Å‚†¢‚°ê‚†à‚†Ñ‚†°‚¢ê‚†ê‚°Ä‚°Ç‚¢Ç‚†°‚¢∏ ',
  '‚†Ä‚°è‚†Ñ‚†Ö‚†å‚¢®‚°Ç‚†°‚¢Å‚¢ê‚¢Ä‚†Ç‚†°‚¢∏‚°∑‚°á‚†®‚£Ä‚°•‚¢º‚°ã‚†â‚¢â‚£†‚£†‚£†‚£†‚£†‚°∏‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚¢∏‚†Ü‚†Ä‚†Ä‚†Ä‚†∞‚£ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ü‚†Ä‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚¢à‚°Ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢∏‚°ó‚†¨‚¢§‚£à‚£ß‚†Å‚†Ö‚°Å‚°Ç‚†Ç‚°Ç‚°ê‚¢ê‚†ê‚¢∏ ',
  '‚†Ä‚°Ø‚†Ä‚†Ö‚†å‚¢∏‚£ß‚†à‚†Ñ‚¢Ç‚†ê‚£à‚°å‚¢º‚£Ø‚°ó‚†â‚†Ä‚†Ä‚¢∏‚°É‚†Ä‚¢∏‚°Ç‚†Ä‚†Ä‚†Ä‚¢∏‚¢Ø‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚¢∏‚°É‚†Ä‚†Ä‚†Ä‚¢ò‚£ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†Ä‚†ê‚°Ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚£ø‚°ó‚†±‚†∞‚¢Ñ‚°Ö‚£≤‚†ê‚¢ê‚†à‚¢∏ ',
  '‚†Ä‚°ß‚†Å‚†Ö‚†å‚£∏‚°ª‚°¶‚†ï‚†ä‚†â‚†Ä‚†Ä‚¢∏‚°∑‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚£º‚†Ç‚†Ä‚†Ä‚†Ä‚¢∏‚°Ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚£º‚†Ö‚†Ä‚†Ä‚†Ä‚¢®‚£ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£∑‚°¥‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†®‚°Ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢∏‚°á‚†Ä‚†Ä ‚°á‚¢∑‚†Ä‚†Ä‚†Ä‚¢®‚£ø‚†ë‚†í‚†¨‚£∏ ',
  '‚†Ä‚°∑‚†ä‚†ä‚†â‚¢∏‚°É‚¢∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ü‚£á‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚£†‚°¥‚†õ‚£á‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚£†‚°¥‚†ì‚†ß‚£Ñ‚†Ä‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£®‚¢ó‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚°á‚†∏‚°á‚†Ä‚¢†‚°è‚£ø‚†Ä‚†Ä‚†Ä‚¢∏ ',
  '‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†ò‚£á‚†Ä‚†Ä‚¢Ä‚°¥‚†û‚†Å‚†Ä‚†ô‚¢¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¥‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†ô‚†¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚†õ‚†Å‚†Ä‚†ô‚†≤‚£Ñ‚°Ä‚†Ä‚£ø‚†à‚†≥‚¢¶‚°Ä ‚°á‚†Ä‚¢ª‚°Ä‚°æ‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚¢∏ ',
  '‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚¢π‚£§‚†û‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚¢¶‚°¥‚†ö‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚¢¶‚°§‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚¢¶‚£§‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†∂‚£Ø‚†Ä‚†Ä‚†Ä‚†â‚†≥‚°á‚†Ä‚†à‚£ø‚†Å‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚¢∏ ',
  '‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†∏‚£á‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚¢∏ ',
  '‚†Ä‚°á‚†Ä‚£Ä‚£¥‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ü‚°Ä‚†Ä‚†Ä‚¢∏ ',
  '‚¢∞‚£ß‚†æ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢¶‚£Ñ‚†∏‚£á',
  '‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø',
}

local function pretty_version()
  local v = vim.version()
  local pre_info = v.prerelease and string.format(' %s (%s)', v.prerelease, v.build) or ''
  return string.format('v%d.%d.%d%s', v.major, v.minor, v.patch, pre_info)
end

local function python_venv()
  local venv = vim.env.VIRTUAL_ENV
  if venv ~= nil then
    return string.format('üêç VirtualEnv: %s', vim.fn.fnamemodify(venv, ':t'))
  end
  return ''
end

---@type snacks.dashboard.Config
---@diagnostic disable-next-line: missing-fields
return {
  enabled = true,
  sections = {
    {
      gap = 1,
      padding = 2,
      function()
        local height = vim.api.nvim_win_get_height(0)
        if false and height >= 40 then -- NOTE: Disabled for now
          return { header = table.concat(logo, '\n') }
        else
          return { header = 'N E O V I M' }
        end
      end,
      { header = pretty_version() },
    },
    {
      gap = 1,
      {
        { icon = icons.common.find, key = 'f', desc = 'Find File', action = ':Telescope find_files' },
        { icon = 'ÔÉÖ ', key = 'r', desc = 'Recent Files', action = ':Telescope oldfiles' },
        { icon = icons.common.file_blank, key = 'n', desc = 'New File', action = ':ene | startinsert' },
        { icon = 'ÔÄ¢ ', key = 'g', desc = 'Find Text', action = ':Telescope live_grep' },
        {
          icon = 'Ôê£ ',
          key = 'c',
          desc = 'Config',
          action = util.telescope 'nvim_config',
        },
        { icon = 'ÔÄ≠ ', key = 'm', desc = 'Man Pages', action = ':Telescope man_pages' },
        { icon = 'Óçà ', key = 's', desc = 'Restore Session', section = 'session' },
        { icon = 'Û∞í≤ ', key = 'L', desc = 'Lazy', action = ':Lazy', enabled = package.loaded.lazy ~= nil },
        { icon = 'Û∞£™ ', key = 'M', desc = 'Mason', action = ':Mason' },
        { icon = 'Ôê¶ ', key = 'q', desc = 'Quit', action = ':qa' },
      },
    },
    {
      padding = { 1, 1 },
      { section = 'startup' },
      { footer = python_venv() },
    },
    {
      pane = 2,
      indent = 2,
      padding = 1,
      icon = icons.common.file,
      title = 'Recent Files',
      section = 'recent_files',
      cwd = true,
    },
    {
      pane = 2,
      indent = 2,
      padding = 1,
      icon = icons.common.folder_open,
      title = 'Projects',
      section = 'projects',
    },
    function()
      local root = Snacks.git.get_root()
      local in_repo = root ~= nil
      local sections = {
        {
          indent = 0,
          icon = 'Óúâ ',
          desc = 'Browse Repository',
          key = 'b',
          action = Snacks.gitbrowse,
        },
        {
          icon = icons.git.branch,
          title = 'Git Status',
          section = 'terminal',
          height = 6,
          cmd = 'git --no-pager diff --stat -B -M -C',
        },
        {
          icon = 'Ôì≠ ',
          title = 'Git Log',
          section = 'terminal',
          height = 5,
          cmd = "git --no-pager log --pretty=format:'%C(green)%h%C(reset) %s' HEAD~5..",
        },
        {
          icon = 'Û∞™∂ ',
          title = 'Git Stash',
          section = 'terminal',
          height = 5,
          cmd = "git --no-pager stash list --pretty=format:'%C(magenta)%gd%C(reset): %gs'",
          enabled = function() return in_repo and vim.fn.filereadable(vim.fs.joinpath(root, '.git/refs/stash')) == 1 end,
        },
      }
      return vim.tbl_map(
        function(section)
          return vim.tbl_extend('keep', section, {
            pane = 2,
            indent = 2,
            padding = 1,
            enabled = in_repo,
          })
        end,
        sections
      )
    end,
  },
}
