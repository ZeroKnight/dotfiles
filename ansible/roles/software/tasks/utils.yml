# vim: ft=yaml.ansible

- name: Install utilities (Suse)
  become: true
  community.general.zypper:
    disable_recommends: false
    state: present
    name:
      - bat
      - curl
      - eza
      - fd
      - fortune
      - fzf
      - fzy
      - gh
      - git-delta
      - gnu_parallel
      - jq
      - keychain
      - kitty-terminfo
      - lf
      - plocate
      - ripgrep
      - sed
      - tmux
      - tree
  when: ansible_os_family == 'Suse'

- name: Install utilities (Debian)
  become: true
  when: ansible_os_family == 'Debian'
  block:
    - name: Install utilities (Debian)
      ansible.builtin.apt:
        state: present
        name:
          - bat
          - curl
          - eza
          - fd-find
          - fortune-mod
          - fzf
          - fzy
          - git-delta
          - jq
          - keychain
          - kitty-terminfo
          - parallel
          - "{{ ansible_distribution_version is version('22.04', '>=') | ternary('plocate', 'mlocate') }}"
          - ripgrep
          - sed
          - tmux
          - tree

    - name: Create link with proper executable name
      ansible.builtin.file:
        src: "/usr/bin/{{ item[0] }}"
        dest: "/usr/local/bin/{{ item[1] }}"
        state: hard
        owner: root
        group: root
        mode: '0755'
      loop:
        - [fdfind, fd]
        - [batcat, bat]

- name: Enable delta in git config
  ansible.builtin.file:
    src: "{{ (config_dir, 'git', 'conf.d', 'delta.gitconfig') | path_join }}"
    dest: "{{ (config_dir, 'git', 'conf.enabled', 'delta.gitconfig') | path_join }}"
    state: link

- name: Install z.lua
  ansible.builtin.git:
    repo: https://github.com/skywind3000/z.lua
    dest: "{{ (opt_dir, 'zlua') | path_join }}"
    depth: 1
  tags: shell

- name: Install pistol for lf
  vars:
    repo: 'doronbehar/pistol'
    bin_file: "pistol-static-linux-{{ ansible_architecture }}"
  tags: shell
  block:
    - name: Get latest pistol release
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ repo }}/releases/latest"
        method: GET
      register: pistol_release

    - name: Download latest pistol release
      become: true
      ansible.builtin.get_url:
        url: "{{ item.src.browser_download_url }}"
        dest: "{{ ('/usr/local', item.dest) | path_join }}"
        mode: "{{ item.mode }}"
      loop:
        - src: "{{ pistol_release.json.assets | selectattr('name', 'eq', bin_file) | first }}"
          dest: bin/pistol
          mode: "0755"
        - src: "{{ pistol_release.json.assets | selectattr('name', 'eq', 'pistol.1') | first }}"
          dest: share/man/man1/pistol.1
          mode: "0644"
      loop_control:
        label: "{{ item.src.name }}"

- name: Install Tokyo Night Theme
  vars:
    tokyonight:
      root: "{{ (opt_dir, 'tokyonight-extras') | path_join }}"
      extras: "{{ (opt_dir, 'tokyonight-extras', 'extras') | path_join }}"
      style: tokyonight_storm
  tags:
    - shell
    - tokyonight
  block:
    - name: Create local opt directory for Tokyo Night extras
      ansible.builtin.file:
        path: "{{ tokyonight.root }}"
        state: directory
        mode: "0755"

    - name: Sparse checkout Tokyo Night repository
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        git init
        git symbolic-ref HEAD refs/heads/main
        mkdir .git/info
        git sparse-checkout set extras/
        git remote add origin https://github.com/folke/tokyonight.nvim
        git pull --depth=1 origin main
      args:
        chdir: "{{ tokyonight.root }}"
        creates: "{{ tokyonight.extras }}"

    - name: Deploy Toyko Night theme for bat
      vars:
        theme_dir: "{{ (config_dir, 'bat', 'themes') | path_join }}"
        theme_file: "{{ tokyonight.style ~ '.tmTheme' }}"
      block:
        - name: Ensure bat themes directory exists
          ansible.builtin.file:
            path: "{{ theme_dir }}"
            mode: "0755"
            state: directory

        - name: Link Tokyo Night bat theme
          ansible.builtin.file:
            src: "{{ (tokyonight.extras, 'sublime', theme_file) | path_join }}"
            dest: "{{ (theme_dir, theme_file) | path_join }}"
            state: link

        - name: Rebuild bat cache
          ansible.builtin.command:
            cmd: bat cache --build
            creates: "{{ (ansible_env.HOME, '.cache', 'bat') | path_join }}"

    - name: Deploy Tokyo Night theme for kitty
      vars:
        theme_dir: "{{ (config_dir, 'kitty', 'themes') | path_join }}"
        theme_file: "{{ tokyonight.style ~ '.conf' }}"
      block:
        - name: Ensure kitty themes directory exists
          ansible.builtin.file:
            path: "{{ theme_dir }}"
            mode: "0755"
            state: directory

        - name: Link Tokyo Night kitty theme
          ansible.builtin.file:
            src: "{{ (tokyonight.extras, 'kitty', theme_file) | path_join }}"
            dest: "{{ (theme_dir, theme_file) | path_join }}"
            state: link
