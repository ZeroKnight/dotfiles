priority 50

snippet "def(ine)?" "#define ..." r
#define $1
endsnippet

snippet ifndef "#ifndef ... #define ... #endif"
#ifndef ${1/(\w+).*/$1/}
#define ${1:SYMBOL} ${2:value}
$0
#endif /* $1 */
endsnippet

snippet #if "#if ... #endif"
#if ${1:0}
${VISUAL}$0
#endif
endsnippet

snippet inc "#include <foo>"
#include <${1:iostream}>$0
endsnippet

# C/C++ agnostic. Will mimic the '.c*' extension as '.h*'
# Eg: foo.c -> foo.h, foo.cpp -> foo.hpp, foo.cxx -> foo.hxx, foo.cc -> foo.hh
snippet Inc "#include local header"
#include "${1:`!v expand("%:t:r")`}.${2:`!p snip.rv = re.sub('c','h',re.sub(r'\w+\.','',snip.fn))`}"$0
endsnippet

snippet guard "Header Guard" b
#ifndef ${2:PATH_}${1:`!p snip.rv = re.sub(r'[^A-Za-z0-9]+', '_', snip.fn).upper()`}_INCLUDED
#define $2$1_INCLUDED

$0

#endif /* #ifndef $2$1_INCLUDED */
endsnippet

snippet main "int main() { ... }"
int main(int argc, char *argv[])
{
	${VISUAL}$0
	return 0;
}
endsnippet

snippet for "for loop"
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}$0
}
endsnippet

snippet "wh(ile)?" "while loop" r
while ($1)
{
	${VISUAL}$0
}
endsnippet

snippet do "do/while loop"
do
{
	${VISUAL}$0
} while ($1);
endsnippet

snippet if "if statement"
if ($1)
{
	${VISUAL}$0
}
endsnippet

snippet el "else statement"
else
{
	${VISUAL}$0
}
endsnippet

snippet eli "else if statement"
else if ($1)
{
	${VISUAL}$0
}
endsnippet

snippet ife "if/else statement"
if ($1)
{
	${VISUAL}$2
}
else
{
	$3
}
endsnippet

snippet ifei "if/else if statement"
if ($1)
{
	${VISUAL}$2
}
else if ($3)
{
	$4
}
endsnippet

snippet ifee "if/else if/else statement"
if ($1)
{
	${VISUAL}$2
}
else if ($3)
{
	$4
}
else
{
	$5
}
endsnippet

snippet enum "Enumeration"
enum $1 { $0 };
endsnippet

snippet td "Typedef"
typedef ${1:int} ${2:typename};
endsnippet

snippet "st(ruct)?" "struct" r
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`}
{
	$0
};
endsnippet

snippet tds "typedef struct ..."
typedef struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`}
{
	$0
} $1;
endsnippet

snippet fun "function definition" b
${1:void} $2($3)
{
	${VISUAL}$0
}
endsnippet

snippet fund "function declaration" b
${1:void} $2($3);
endsnippet

snippet printf "printf ..."
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet fprintf "fprintf ..."
fprintf(${1:stderr}, "${2:%s}\n"${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$3${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet chead "Section Comment header" b
/***************************************************************\
 * $1
\***************************************************************/

$0
endsnippet

# vim: ft=snippets ts=4
